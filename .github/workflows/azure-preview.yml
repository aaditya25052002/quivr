name: Deploy Backend to Azure

on:
  push:
    branches: [ "main" ]
    paths:
      - 'backend/**'

env:
  AZURE_REGION: East US
  ACR_NAME: quivrcontainer
  IMAGE_NAME: backend:${{ github.sha }}
  RESOURCE_GROUP_NAME: quivr  # The provided resource group name

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Login to Azure
      run: |
        az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}

    - name: Login to ACR
      run: |
        az acr login --name ${{ env.ACR_NAME }}

    - name: Build & Push Docker image
      run: |
        docker build -t ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }} ./backend/
        docker push ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}

  deploy:
    needs: build_and_push
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Login to Azure
      run: |
        az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}

    # Deploy to ACI:
    - name: Deploy to ACI
      run: |
        az container create --name quivr-container-instance --resource-group quivr 
        --image ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }} --cpu 1 --memory 1.5 
        --ip-address public --ports 80 --registry-username quivrcontainer 
        --registry-password ${{ secrets.CONTAINER_PASSWORD }} 
        --environment-variables JWT_SECRET_KEY=
          ${{ secrets.JWT_SECRET_KEY }}
